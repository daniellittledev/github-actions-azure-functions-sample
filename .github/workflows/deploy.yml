name: Deploy
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag"
        required: true
      prerelease:
        description: "Is prerelease"
        required: true
        default: "false"

jobs:
  deploy-test:
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/_deploy-to-env.yml
    with:
      environment: test
      version: ${{ github.event_name == 'release' && github.event.release.tag_name || github.event.inputs.tag }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_TEST }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_TEST }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP_TEST }}
      AZURE_FUNCTIONAPP_NAME: ${{ secrets.AZURE_FUNCTIONAPP_NAME_TEST }}

  deploy-prod:
    needs: [deploy-test]
    if: (github.event_name == 'release' && github.event.release.prerelease  || github.event.inputs.prerelease) == 'false'
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/_deploy-to-env.yml
    with:
      environment: prod
      version: ${{ github.event_name == 'release' && github.event.release.tag_name || github.event.inputs.tag }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_PROD }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_PROD }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP_PROD }}
      AZURE_FUNCTIONAPP_NAME: ${{ secrets.AZURE_FUNCTIONAPP_NAME_PROD }}
